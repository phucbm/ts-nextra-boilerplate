/**!
 * TypeScript Nextra Boilerplate v1.0.0
 * @author undefined
 * @homepage https://github.com/phucbm/ts-nextra-boilerplate
 * @license MIT 2025
 */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o=e();for(var s in o)("object"==typeof exports?exports:t)[s]=o[s]}}(this,(()=>(()=>{"use strict";var t={d:(e,o)=>{for(var s in o)t.o(o,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:o[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Boilerplate:()=>i,BoilerplateInstance:()=>o,default:()=>n});class o{constructor(t={}){this.id=crypto.randomUUID();this.options=Object.assign({debug:!1},t),this.options.debug&&console.log(`Boilerplate ${this.id} initialized with options`,this.options)}update(t){return this.options=Object.assign(Object.assign({},this.options),t),this.options.debug&&console.log(`Boilerplate ${this.id} updated with new options`,t),this}destroy(){this.options.debug&&console.log(`Boilerplate ${this.id} destroyed`)}}const s=new class{constructor(){this.instances=[]}create(t={}){const e=new o(t);return this.add(e),e}add(t){this.instances.push(t)}get(t){return this.instances.find((e=>e.id===t))}getAll(){return[...this.instances]}destroy(t){const e=this.get(t);return!!e&&(e.destroy(),this.instances=this.instances.filter((e=>e.id!==t)),!0)}destroyAll(){this.instances.forEach((t=>t.destroy())),this.instances=[]}};"undefined"!=typeof window&&(window.Boilerplate=s);const i=s,n=s;return e})()));